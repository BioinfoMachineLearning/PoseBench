# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

### VisualStudioCode
.vscode/*
!.vscode/settings.json
!.vscode/tasks.json
!.vscode/launch.json
!.vscode/extensions.json
*.code-workspace
**/.vscode

# JetBrains
.idea/

# Data & Models
*.h5
*.tar
*.tar.gz

# PoseBench
configs/local/default.yaml
/*cache_dir/
/*alignment_viz/
/casp15_ligand_scoring/
/data/
/ensemble_generation_scripts/
/logs/
/outputs/
/PoseBench/
/results/
.env
*.npy
*.pdb

# Aim logging
.aim

# Forks
/workdir/
/forks/alphafold3/*prediction_outputs/
/forks/boltz/boltz/
/forks/boltz/prediction_inputs/
/forks/boltz/prediction_outputs/
/forks/chai-lab-orig/
/forks/chai-lab*/chai-lab/
/forks/chai-lab*/prediction_inputs/
/forks/chai-lab*/prediction_outputs/
/forks/DiffDock1.0/
/forks/DiffDock/DiffDock/
/forks/DynamicBind/*.npy
/forks/DynamicBind/DynamicBind/
/forks/DynamicBind/esm_models/
/forks/DynamicBind/workdir/
/forks/FABind/ckpt/best_model.bin
/forks/FABind/FABind/
/forks/FlowDock/FlowDock/
/forks/FlowDock/checkpoints/
/forks/NeuralPLexer/NeuralPLexer/
/forks/NeuralPLexer/**/neuralplexermodels*
/forks/NeuralPLexer*/prediction_inputs/
/forks/P2Rank/
/forks/*/*inference*/
/forks/RoseTTAFold-All-Atom/blast-2.2.26
/forks/RoseTTAFold-All-Atom/rf2aa/config/inference/*_rfaa_inference.yaml
/forks/RoseTTAFold-All-Atom/csblast-2.2.3
/forks/RoseTTAFold-All-Atom/ensemble_generation_scripts/
/forks/RoseTTAFold-All-Atom/outputs/
/forks/RoseTTAFold-All-Atom/pdb100_2021Mar03/
/forks/RoseTTAFold-All-Atom/prediction_inputs/
/forks/RoseTTAFold-All-Atom/prediction_outputs/
/forks/RoseTTAFold-All-Atom/RFAA/
/forks/RoseTTAFold-All-Atom/RFAA_paper_weights.pt
/forks/RoseTTAFold-All-Atom/SE3nv-20240131.sif
/forks/RoseTTAFold-All-Atom/psipred/
/forks/TULIP/outputs/
/forks/Vina/ADFR/
scripts/*inference*/
